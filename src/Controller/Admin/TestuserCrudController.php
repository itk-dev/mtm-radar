<?php

namespace App\Controller\Admin;

use App\Entity\Testuser;
use App\EventSubscriber\TestSubscriber;
use Doctrine\ORM\EntityManagerInterface;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ArrayField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ChoiceField;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use SebastianBergmann\CodeCoverage\Report\Xml\Tests;
use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;

class TestuserCrudController extends AbstractCrudController
{

    private UserPasswordHasherInterface $hasher;

    public static function getEntityFqcn(): string
    {
        return Testuser::class;
    }

    public function __construct(UserPasswordHasherInterface $hasher)
    {
        $this->hasher = $hasher;
    }


    public function persistEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {

        $entityInstance->setPassword($this->hasher->hashPassword($entityInstance, 'test'));

        parent::persistEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

    public function configureFields(string $pageName): iterable
    {
        $email = TextField::new('email');
        $roles = ArrayField::new('roles');
        $assoc_roles = ChoiceField::new('roles')->setChoices([
            'User' => "ROLE_USER",
            'Admin' => "ROLE_ADMIN",

        ])->allowMultipleChoices(true)->renderExpanded();
        // $random = textfield::new('password')->


        if (Crud::PAGE_INDEX === $pageName) {
            return [$email, $roles];
        }elseif (Crud::PAGE_NEW === $pageName) {
            return [$email, $assoc_roles];
        }elseif (Crud::PAGE_EDIT === $pageName) {
            return [$email, $assoc_roles];
        }
    }


}
